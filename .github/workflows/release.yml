name: 推送版本标签时自动发布 Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-publish:
    runs-on: windows-latest
    steps:
      - name: 签出代码
        uses: actions/checkout@v4

      - name: 安装 Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: 安装 Poetry
        run: pip install poetry

      - name: 缓存 pip 包
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('**/requirements.txt') }}

      - name: 缓存 Poetry 虚拟环境
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry/virtualenvs/
            dist/
          key: poetry-${{ hashFiles('poetry.lock') }}

      - name: 安装依赖
        run: poetry install --no-interaction

      - name: 获取版本号
        id: get_poetry_version
        shell: pwsh
        run: |
          $version = poetry version -s
          echo "version=$version" >> $env:GITHUB_OUTPUT
          echo "当前版本: ${version}"

      - name: 校验版本号一致性
        shell: pwsh
        run: |
          # 使用正则严格匹配语义化版本 (SemVer)
          $tagVersion = $env:GITHUB_REF -replace '^refs/tags/v?',''
          $poetryVersion = poetry version -s

          if ($tagVersion -notmatch '^\d+\.\d+\.\d+(-[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+)?$') {
            Write-Error "标签版本格式无效: $tagVersion"
            exit 1
          }

          if ($tagVersion -ne $poetryVersion) {
            Write-Error "::error::版本不一致！标签版本: $tagVersion ≠ 项目版本: $poetryVersion"
            exit 1
          }

      - name: 构建 whl
        run: poetry build

      - name: 上传至 Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.whl
          tag_name: v${{ steps.get_poetry_version.outputs.version }}
          name: Release v${{ steps.get_poetry_version.outputs.version }}
          generate_release_notes: true
